esphome:
  name: picotemp
  friendly_name: picotemp

rp2040:
  board: rpipicow

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret picotemp_apikey

ota:
  - platform: esphome
    password: !secret picotemp_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip: 
    static_ip: !secret picotemp_ip
    gateway: !secret picotemp_gw
    subnet: 255.255.255.0

  # Enable fallback hotspot in case wifi connection fails
  ap:
    ssid: !secret picotemp_ap_ssid
    password: !secret picotemp_ap_password

#### HARDWARE INTERFACE ########################################################################################
spi:
  clk_pin: GPIO18
  mosi_pin: GPIO19
  miso_pin: GPIO16
  interface: spi

display:
- platform: ili9xxx
  model: ili9341
  id: my_display
  dc_pin: GPIO00
  reset_pin: GPIO01
  cs_pin: GPIO17
  rotation: 90
  invert_colors: false


touchscreen:
- platform: xpt2046
  id: my_touchscreen
  cs_pin: GPIO21
  update_interval: 50ms
  threshold: 400
  transform:
    mirror_x: True
    mirror_y: False
    swap_xy: True
  calibration:
    x_min: 281
    x_max: 3848
    y_min: 347
    y_max: 3878
  on_release:
  - if:
      condition: lvgl.is_paused
      then:
        - logger.log: "LVGL resuming"
        - lvgl.resume:
        - lvgl.widget.redraw:

#### SENSORS ########################################################################################

output:
  - platform: gpio
    pin: GPIO22
    id: generic_out
switch:
  - platform: output
    name: "Generic Output"
    id: sw_out
    output: 'generic_out'

binary_sensor:
  - platform: status
    id: lab_status
    name: Status sensor
  - platform: gpio
    id: hw_button
    pin: 3
    name: "Button BTN"
    filters:
      - invert:
      - delayed_off: 100ms
    on_press:
      then:
        - lambda: id(sw_out).toggle();
    # on_release:
    #   then:
    #     #- output.turn_off: 'generic_out'
    #     - logger.log: "Button released"

sensor:
  - platform: homeassistant
    name: "Current Temperature"
    id: current_temperature
    entity_id: weather.forecast_home
    attribute:  temperature
    internal: True
    unit_of_measurement: "°F"
    on_value: 
      then:
        - lvgl.label.update: 
            id: label_temp
            text: 
              format: "%.0f °F"
              args: ['id(current_temperature).state']
  - platform: homeassistant
    name: "Forecast Temp Hi 1"
    id: temphi1
    entity_id: sensor.temperature_high_forecast_1
    internal: True
    unit_of_measurement: "°F"
    on_value: 
      then:
        - lvgl.label.update: 
            id: label_temphi1
            text: 
              format: "%.0f °F"
              args: ['id(temphi1).state']
  - platform: homeassistant
    name: "Forecast Temp Low 1"
    id: templow1
    entity_id: sensor.temperature_low_forecast_1
    internal: True
    unit_of_measurement: "°F"
    on_value: 
      then:
        - lvgl.label.update: 
            id: label_templow1
            text: 
              format: "%.0f °F"
              args: ['id(templow1).state']
  - platform: homeassistant
    name: "Forecast Temp Hi 2"
    id: temphi2
    entity_id: sensor.temperature_high_forecast_2
    internal: True
    unit_of_measurement: "°F"
    on_value: 
      then:
        - lvgl.label.update: 
            id: label_temphi2
            text: 
              format: "%.0f °F"
              args: ['id(temphi2).state']
  - platform: homeassistant
    name: "Forecast Temp Low 2"
    id: templow2
    entity_id: sensor.temperature_low_forecast_2
    internal: True
    unit_of_measurement: "°F"
    on_value: 
      then:
        - lvgl.label.update: 
            id: label_templow2
            text: 
              format: "%.0f °F"
              args: ['id(templow2).state']
  - platform: homeassistant
    name: "Forecast Temp Hi 3"
    id: temphi3
    entity_id: sensor.temperature_high_forecast_3
    internal: True
    unit_of_measurement: "°F"
    on_value: 
      then:
        - lvgl.label.update: 
            id: label_temphi3
            text: 
              format: "%.0f °F"
              args: ['id(temphi3).state']
  - platform: homeassistant
    name: "Forecast Temp Low 1"
    id: templow3
    entity_id: sensor.temperature_low_forecast_3
    internal: True
    unit_of_measurement: "°F"
    on_value: 
      then:
        - lvgl.label.update: 
            id: label_templow3
            text: 
              format: "%.0f °F"
              args: ['id(templow3).state']


time:
  - platform: homeassistant
    id: homeassistant_time

text_sensor:
  - platform: homeassistant
    id: current_condition
    entity_id: weather.forecast_home
    internal: True
    on_value:
      then:
        - lvgl.label.update:
            id: label_condition
            #text: ! lambda |- return x;
            text:
              format: "%s"
              args: [id(current_condition).state.c_str()]
        - lvgl.label.update: 
            id: label_cond_icon
            text: !lambda |-
              if (id(current_condition).state == "sunny") return "\U000F0599";
              else if (id(current_condition).state == "clear-night") return "\U000F0594";
              else if (id(current_condition).state == "cloudy") return "\U000F0590"; 
              else if (id(current_condition).state == "exceptional") return "\U000F0F2F";
              else if (id(current_condition).state == "fog") return "\U000F0591";
              else if (id(current_condition).state == "hail") return "\U000F0592";
              else if (id(current_condition).state == "lightning") return "\U000F0593";
              else if (id(current_condition).state == "lightning-rainy") return "\U000F067E";
              else if (id(current_condition).state == "partlycloudy") return "\U000F0595";
              else if (id(current_condition).state == "pouring") return "\U000F0596";
              else if (id(current_condition).state == "rainy") return "\U000F0597";
              else if (id(current_condition).state == "snowy") return "\U000F0598";
              else if (id(current_condition).state == "snowy-rainy") return "\U000F067F";
              else if (id(current_condition).state == "windy") return "\U000F059D";
              else if (id(current_condition).state == "windy-variant") return "\U000F059E";
              else if (id(current_condition).state == "sunny-off") return "\U000F14E4";
              else return "\U0000F0599";
        - lvgl.label.update:
            id: label_cond_icon
            text_color: !lambda |-
              if (id(current_condition).state == "sunny") return lv_color_hex(0xFFFF00); 
              else if (id(current_condition).state == "lightning-rainy") return lv_color_hex(0x0000FF);
              else if (id(current_condition).state == "rainy") return lv_color_hex(0x00FFFF);
              else return lv_color_hex(0xFFFFFF);
  - platform: homeassistant
    id: day1
    entity_id: sensor.condition_forecast_1
    internal: True
    on_value:
      then:
        - lvgl.label.update:
            id: label_day1
            text: !lambda |-
              if (id(day1).state == "sunny") return "\U000F0599";
              else if (id(day1).state == "clear-night") return "\U000F0594";
              else if (id(day1).state == "cloudy") return "\U000F0590"; 
              else if (id(day1).state == "exceptional") return "\U000F0F2F";
              else if (id(day1).state == "fog") return "\U000F0591";
              else if (id(day1).state == "hail") return "\U000F0592";
              else if (id(day1).state == "lightning") return "\U000F0593";
              else if (id(day1).state == "lightning-rainy") return "\U000F067E";
              else if (id(day1).state == "partlycloudy") return "\U000F0595";
              else if (id(day1).state == "pouring") return "\U000F0596";
              else if (id(day1).state == "rainy") return "\U000F0597";
              else if (id(day1).state == "snowy") return "\U000F0598";
              else if (id(day1).state == "snowy-rainy") return "\U000F067F";
              else if (id(day1).state == "windy") return "\U000F059D";
              else if (id(day1).state == "windy-variant") return "\U000F059E";
              else if (id(day1).state == "sunny-off") return "\U000F14E4";
              else return "\U0000F0599";
            text_color: !lambda |-
              if (id(day1).state == "sunny") return lv_color_hex(0xFFFF00); 
              else if (id(day1).state == "lightning-rainy") return lv_color_hex(0x0000FF);
              else if (id(day1).state == "rainy") return lv_color_hex(0x00FFFF);
              else return lv_color_hex(0xFFFFFF);
  - platform: homeassistant
    id: day2
    entity_id: sensor.condition_forecast_2
    internal: True
    on_value:
      then:
        - lvgl.label.update:
            id: label_day2
            text: !lambda |-
              if (id(day2).state == "sunny") return "\U000F0599";
              else if (id(day2).state == "clear-night") return "\U000F0594";
              else if (id(day2).state == "cloudy") return "\U000F0590"; 
              else if (id(day2).state == "exceptional") return "\U000F0F2F";
              else if (id(day2).state == "fog") return "\U000F0591";
              else if (id(day2).state == "hail") return "\U000F0592";
              else if (id(day2).state == "lightning") return "\U000F0593";
              else if (id(day2).state == "lightning-rainy") return "\U000F067E";
              else if (id(day2).state == "partlycloudy") return "\U000F0595";
              else if (id(day2).state == "pouring") return "\U000F0596";
              else if (id(day2).state == "rainy") return "\U000F0597";
              else if (id(day2).state == "snowy") return "\U000F0598";
              else if (id(day2).state == "snowy-rainy") return "\U000F067F";
              else if (id(day2).state == "windy") return "\U000F059D";
              else if (id(day2).state == "windy-variant") return "\U000F059E";
              else if (id(day2).state == "sunny-off") return "\U000F14E4";
              else return "\U0000F0599";
            text_color: !lambda |-
              if (id(day2).state == "sunny") return lv_color_hex(0xFFFF00); 
              else if (id(day2).state == "lightning-rainy") return lv_color_hex(0x0000FF);
              else if (id(day2).state == "rainy") return lv_color_hex(0x00FFFF);
              else return lv_color_hex(0xFFFFFF);
  - platform: homeassistant
    id: day3
    entity_id: sensor.condition_forecast_3
    internal: True
    on_value:
      then:
        - lvgl.label.update:
            id: label_day3
            text: !lambda |-
              if (id(day3).state == "sunny") return "\U000F0599";
              else if (id(day3).state == "clear-night") return "\U000F0594";
              else if (id(day3).state == "cloudy") return "\U000F0590"; 
              else if (id(day3).state == "exceptional") return "\U000F0F2F";
              else if (id(day3).state == "fog") return "\U000F0591";
              else if (id(day3).state == "hail") return "\U000F0592";
              else if (id(day3).state == "lightning") return "\U000F0593";
              else if (id(day3).state == "lightning-rainy") return "\U000F067E";
              else if (id(day3).state == "partlycloudy") return "\U000F0595";
              else if (id(day3).state == "pouring") return "\U000F0596";
              else if (id(day3).state == "rainy") return "\U000F0597";
              else if (id(day3).state == "snowy") return "\U000F0598";
              else if (id(day3).state == "snowy-rainy") return "\U000F067F";
              else if (id(day3).state == "windy") return "\U000F059D";
              else if (id(day3).state == "windy-variant") return "\U000F059E";
              else if (id(day3).state == "sunny-off") return "\U000F14E4";
              else return "\U0000F0599";
            text_color: !lambda |-
              if (id(day3).state == "sunny") return lv_color_hex(0xFFFF00); 
              else if (id(day3).state == "lightning-rainy") return lv_color_hex(0x0000FF);
              else if (id(day3).state == "rainy") return lv_color_hex(0x00FFFF);
              else return lv_color_hex(0xFFFFFF);

#### FONT ########################################################################################

font:
  # gfonts://family[@weight]
  - file: "gfonts://Roboto"
    id: my_font_18
    size: 18
  - file: "gfonts://Roboto"
    id: my_font_24
    size: 24
  - file: "gfonts://Roboto"
    id: my_font_72
    size: 72

  - file: 'gfonts://Roboto'
    id: icon_font
    size: 60
    bpp: 4
    glyphs: >-
      ! "#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz°
    extras: 
      - file: 'fonts/materialdesignicons-webfont.ttf'
        glyphs: [
          "\U000F059A", # mdi-weather-sunset
          "\U000F059C", # mdi-weather-sunrise
          "\U000F0594", # clear-night
          "\U000F0590", # cloudy
          "\U000F0F2F", # exceptional
          "\U000F0591", # fog
          "\U000F0592", # hail
          "\U000F0593", # lightning
          "\U000F067E", # lightning-rainy
          "\U000F0595", # partlycloudy
          "\U000F0596", # pouring
          "\U000F0597", # rainy
          "\U000F0598", # snowy
          "\U000F067F", # snowy-rainy
          "\U000F0599", # sunny
          "\U000F059D", # windy
          "\U000F059E", # windy-variant
          "\U000F14E4", # sunny-off
        ]

  - file: "gfonts://Roboto"
    id: both_font
    size: 24
    bpp: 4
    glyphs: >-
      ! "#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz°
    extras: 
      - file: 'fonts/materialdesignicons-webfont.ttf'
        glyphs: [
          "\U000F059A", # mdi-weather-sunset
          "\U000F059C", # mdi-weather-sunrise
          "\U000F0594", # clear-night
          "\U000F0590", # cloudy
          "\U000F0F2F", # exceptional
          "\U000F0591", # fog
          "\U000F0592", # hail
          "\U000F0593", # lightning
          "\U000F067E", # lightning-rainy
          "\U000F0595", # partlycloudy
          "\U000F0596", # pouring
          "\U000F0597", # rainy
          "\U000F0598", # snowy
          "\U000F067F", # snowy-rainy
          "\U000F0599", # sunny
          "\U000F059D", # windy
          "\U000F059E", # windy-variant
          "\U000F14E4", # sunny-off
        ]

  - file: "gfonts://Roboto"
    id: big_font
    size: 36
    bpp: 4
    glyphs: >-
      ! "#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz°
    extras: 
      - file: 'fonts/materialdesignicons-webfont.ttf'
        glyphs: [
          "\U000F059A", # mdi-weather-sunset
          "\U000F059C", # mdi-weather-sunrise
          "\U000F0594", # clear-night
          "\U000F0590", # cloudy
          "\U000F0F2F", # exceptional
          "\U000F0591", # fog
          "\U000F0592", # hail
          "\U000F0593", # lightning
          "\U000F067E", # lightning-rainy
          "\U000F0595", # partlycloudy
          "\U000F0596", # pouring
          "\U000F0597", # rainy
          "\U000F0598", # snowy
          "\U000F067F", # snowy-rainy
          "\U000F0599", # sunny
          "\U000F059D", # windy
          "\U000F059E", # windy-variant
          "\U000F14E4", # sunny-off
        ]

color:
  - id: my_ltgreen
    hex: 90EE90

#### UI ########################################################################################
################################################################################################

lvgl:
  buffer_size: 10%
  displays:
    - my_display
  touchscreens:
    - my_touchscreen
  pages:
    - id: main_page # Default page
      bg_color: 0x0
      border_width: 2
      border_color: 0xC0C0C0
      widgets:
        - obj:
            width: 316
            height: 236
            align: CENTER
            x: 0
            y: 0
            pad_all: 1
            scrollbar_mode: "off"
            bg_opa: TRANSP
            layout:
              type: flex
              flex_flow: ROW_WRAP
              flex_align_cross: CENTER
            widgets:
              - label:
                  id: label_condition
                  width: 300
                  height: 25
                  text_font: both_font
                  text_color: 0xFFFFFF
                  text_align: CENTER
                  bg_color: 0x0
              - label:
                  id: label_cond_icon
                  width: 80
                  height: 75
                  text_color: 0xFFFFFF
                  text_align: CENTER
                  bg_color: 0x0
                  text_font: icon_font
              - label:
                  id: label_temp
                  width: 200
                  height: 75
                  text_color: 0xFF0000
                  text_align: CENTER
                  bg_color: 0x0
                  text_font: my_font_72
              - label:
                  id: blank_r3c0
                  width: 70
                  height: 40
                  text_font: both_font
                  text_color:  0xFFFFFF
                  bg_color: 0x0
                  text: "Cond:"
              - label:
                  id: label_day1
                  width: 70
                  height: 40
                  text_font: big_font
                  text_color:  0xFFFFFF
                  bg_color: 0x0
              - label:
                  id: label_day2
                  width: 70
                  height: 40
                  text_font: big_font
                  text_color:  0xFFFFFF
                  bg_color: 0x0
              - label:
                  id: label_day3
                  width: 70
                  height: 40
                  text_font: big_font
                  text_color:  0xFFFFFF
                  bg_color: 0x0
              - label:
                  id: label_high
                  width: 70
                  height: 25              
                  text_font: both_font
                  text_color:  0xFFFFFF
                  bg_color: 0x0
                  text: "High:"
              - label:
                  id: label_temphi1
                  width: 70
                  height: 25
                  text_font: both_font
                  text_color:  0xFFFFFF
                  bg_color: 0x0
              - label:
                  id: label_temphi2
                  width: 70
                  height: 25
                  text_font: both_font
                  text_color:  0xFFFFFF
                  bg_color: 0x0
              - label:
                  id: label_temphi3
                  width: 70
                  height: 25
                  text_font: both_font
                  text_color:  0xFFFFFF
                  bg_color: 0x0
              - label:
                  id: label_low
                  width: 70
                  height: 25
                  text_font: both_font
                  text_color:  0xFFFFFF
                  bg_color: 0x0
                  text: "Low:"             
              - label:
                  id: label_templow1
                  width: 70
                  height: 25
                  text_font: both_font
                  text_color:  0xFFFFFF
                  bg_color: 0x0
              - label:
                  id: label_templow2
                  width: 70
                  height: 25
                  text_font: both_font
                  text_color:  0xFFFFFF
                  bg_color: 0x0
              - label:
                  id: label_templow3
                  width: 70
                  height: 25
                  text_font: both_font
                  text_color:  0xFFFFFF
                  bg_color: 0x0

